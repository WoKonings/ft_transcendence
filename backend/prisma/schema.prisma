generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  email        String        @unique
  password     String
  gamesPlayed  Int           @default(0)
  createdAt    DateTime      @default(now())
  elo          Int           @default(600)
  isBad        Boolean       @default(false)
  isInGame     Boolean       @default(false)
  isInQueue    Boolean       @default(false)
  blocked      Int[]
  friends      Int[]
  pending      Int[]
  socket       String?
  isOnline     Boolean       @default(false)
  intraId      Int           @unique @default(autoincrement())
  avatar       String?
  gameWins     Int           @default(0)
  gamesWon     Game[]        @relation("GameWinner")
  userChannels UserChannel[]
  games        Game[]        @relation("PlayerGames")
  channels     Channel[]     @relation("UserChannels")
}

model Channel {
  id           Int           @id @default(autoincrement())
  messages     String[]
  banned       String[]
  name         String        @unique
  private      Boolean
  password     String?
  admin        Int[]
  userChannels UserChannel[]
  users        User[]        @relation("UserChannels")
}

model UserChannel {
  userId    Int
  channelId Int
  role      ChannelRole
  channel   Channel     @relation(fields: [channelId], references: [id])
  user      User        @relation(fields: [userId], references: [id])

  @@unique([userId, channelId])
}

model Game {
  id               Int      @id @default(autoincrement())
  playerScores     Int[]
  playerEloChanges Int[]
  winnerId         Int
  endTime          DateTime @default(now())
  startTime        DateTime @default(now())
  winner           User     @relation("GameWinner", fields: [winnerId], references: [id])
  players          User[]   @relation("PlayerGames")
}

enum ChannelRole {
  ADMIN
  MEMBER
}
