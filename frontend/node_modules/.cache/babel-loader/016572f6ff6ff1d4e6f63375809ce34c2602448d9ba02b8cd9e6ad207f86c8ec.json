{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      message: 'Create or login to your account',\n      newUser: {\n        username: '',\n        email: '',\n        password: ''\n      },\n      loginInfo: {\n        usernameOrEmail: '',\n        password: ''\n      },\n      createdUser: null,\n      loggedInUser: null,\n      error: ''\n    };\n  },\n  methods: {\n    async createUser() {\n      this.error = '';\n      try {\n        const response = await axios.post('http://localhost:3000/user', this.newUser);\n        this.createdUser = response.data;\n        this.loggedInUser = null;\n      } catch (error) {\n        this.error = error.response ? error.response.data.error : error.message;\n      }\n    },\n    async loginUser() {\n      this.error = '';\n      try {\n        const response = await axios.post('http://localhost:3000/user/login', this.loginInfo);\n        this.loggedInUser = response.data;\n        this.createdUser = null;\n      } catch (error) {\n        this.error = error.response ? error.response.data.error : error.message;\n      }\n    },\n    async deleteUser() {\n      this.error = '';\n      if (this.loggedInUser) {\n        try {\n          await axios.delete(`http://localhost:3000/user/${this.loggedInUser.id}`);\n          this.loggedInUser = null;\n        } catch (error) {\n          this.error = error.response ? error.response.data.error : error.message;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","message","newUser","username","email","password","loginInfo","usernameOrEmail","createdUser","loggedInUser","error","methods","createUser","response","post","loginUser","deleteUser","delete","id"],"sources":["/app/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>{{ message }}</h1>\n    <form @submit.prevent=\"createUser\">\n      <input v-model=\"newUser.username\" placeholder=\"Username\" required>\n      <input v-model=\"newUser.email\" placeholder=\"Email\" required>\n      <input v-model=\"newUser.password\" type=\"password\" placeholder=\"Password\" required>\n      <button type=\"submit\">Create User</button>\n    </form>\n    <form @submit.prevent=\"loginUser\">\n      <input v-model=\"loginInfo.usernameOrEmail\" placeholder=\"Username or Email\" required>\n      <input v-model=\"loginInfo.password\" type=\"password\" placeholder=\"Password\" required>\n      <button type=\"submit\">Login</button>\n    </form>\n    <button @click=\"deleteUser\" v-if=\"loggedInUser\">Delete Account</button>\n    <div v-if=\"createdUser || loggedInUser\">\n      <h2>User Info</h2>\n      <p>ID: {{ loggedInUser ? loggedInUser.id : createdUser.id }}</p>\n      <p>Username: {{ loggedInUser ? loggedInUser.username : createdUser.username }}</p>\n      <p>Email: {{ loggedInUser ? loggedInUser.email : createdUser.email }}</p>\n    </div>\n    <p v-if=\"error\" style=\"color: red\">{{ error }}</p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      message: 'Create or login to your account',\n      newUser: {\n        username: '',\n        email: '',\n        password: ''\n      },\n      loginInfo: {\n        usernameOrEmail: '',\n        password: ''\n      },\n      createdUser: null,\n      loggedInUser: null,\n      error: ''\n    }\n  },\n  methods: {\n    async createUser() {\n      this.error = '';\n      try {\n        const response = await axios.post('http://localhost:3000/user', this.newUser);\n        this.createdUser = response.data;\n        this.loggedInUser = null;\n      } catch (error) {\n        this.error = error.response ? error.response.data.error : error.message;\n      }\n    },\n    async loginUser() {\n      this.error = '';\n      try {\n        const response = await axios.post('http://localhost:3000/user/login', this.loginInfo);\n        this.loggedInUser = response.data;\n        this.createdUser = null;\n      } catch (error) {\n        this.error = error.response ? error.response.data.error : error.message;\n      }\n    },\n    async deleteUser() {\n      this.error = '';\n      if (this.loggedInUser) {\n        try {\n          await axios.delete(`http://localhost:3000/user/${this.loggedInUser.id}`);\n          this.loggedInUser = null;\n        } catch (error) {\n          this.error = error.response ? error.response.data.error : error.message;\n        }\n      }\n    }\n  }\n}\n</script>\n"],"mappings":"AA0BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,iCAAiC;MAC1CC,OAAO,EAAE;QACPC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ,CAAC;MACDC,SAAS,EAAE;QACTC,eAAe,EAAE,EAAE;QACnBF,QAAQ,EAAE;MACZ,CAAC;MACDG,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,IAAI;MAClBC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI,CAACF,KAAI,GAAI,EAAE;MACf,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMd,KAAK,CAACe,IAAI,CAAC,4BAA4B,EAAE,IAAI,CAACZ,OAAO,CAAC;QAC7E,IAAI,CAACM,WAAU,GAAIK,QAAQ,CAACb,IAAI;QAChC,IAAI,CAACS,YAAW,GAAI,IAAI;MAC1B,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAIA,KAAK,CAACG,QAAO,GAAIH,KAAK,CAACG,QAAQ,CAACb,IAAI,CAACU,KAAI,GAAIA,KAAK,CAACT,OAAO;MACzE;IACF,CAAC;IACD,MAAMc,SAASA,CAAA,EAAG;MAChB,IAAI,CAACL,KAAI,GAAI,EAAE;MACf,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMd,KAAK,CAACe,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAACR,SAAS,CAAC;QACrF,IAAI,CAACG,YAAW,GAAII,QAAQ,CAACb,IAAI;QACjC,IAAI,CAACQ,WAAU,GAAI,IAAI;MACzB,EAAE,OAAOE,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAIA,KAAK,CAACG,QAAO,GAAIH,KAAK,CAACG,QAAQ,CAACb,IAAI,CAACU,KAAI,GAAIA,KAAK,CAACT,OAAO;MACzE;IACF,CAAC;IACD,MAAMe,UAAUA,CAAA,EAAG;MACjB,IAAI,CAACN,KAAI,GAAI,EAAE;MACf,IAAI,IAAI,CAACD,YAAY,EAAE;QACrB,IAAI;UACF,MAAMV,KAAK,CAACkB,MAAM,CAAC,8BAA8B,IAAI,CAACR,YAAY,CAACS,EAAE,EAAE,CAAC;UACxE,IAAI,CAACT,YAAW,GAAI,IAAI;QAC1B,EAAE,OAAOC,KAAK,EAAE;UACd,IAAI,CAACA,KAAI,GAAIA,KAAK,CAACG,QAAO,GAAIH,KAAK,CAACG,QAAQ,CAACb,IAAI,CAACU,KAAI,GAAIA,KAAK,CAACT,OAAO;QACzE;MACF;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}